<!doctype html>
<html lang="zh">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <title>Signin Gitcode</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <style>
      html,
      body {
        height: 100%;
      }

      body {
        display: flex;
        align-items: center;
        padding-top: 40px;
        padding-bottom: 40px;
        background-color: #f5f5f5;
      }

      .form-signin {
        max-width: 330px;
        padding: 15px;
      }

      .form-signin .form-floating:focus-within {
        z-index: 2;
      }

      .form-signin input[type="text"] {
        margin-bottom: -1px;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
      }

      .form-signin input[type="password"] {
        margin-bottom: 10px;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/vue@3.2.47/dist/vue.global.prod.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.3.3/dist/axios.min.js"></script>
  </head>
  <body id="app" class="text-center">
    <main class="form-signin w-100 m-auto">
        <h1 class="h3 mb-3 fw-normal">Gitcode</h1>
        <div ref="liveAlertPlaceholder"></div>
        <div class="form-floating">
          <input type="text" class="form-control" id="floatingInput" placeholder="Username" v-model="username" @input="change">
          <label for="floatingInput" class="text-muted">User name</label>
        </div>
        <div class="form-floating">
          <input type="password" class="form-control" id="floatingPassword" placeholder="Password" v-model="password" @input="change">
          <label for="floatingPassword" class="text-muted">Password</label>
        </div>

        <button class="w-100 btn btn-lg btn-primary" :disabled="btnSigninDisabled" @click="signin">Sign in</button>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/crypto-js@4.1.1/crypto-js.min.js"></script>
    <script>
      'use strict'
      const { createApp } = Vue
      createApp({
          data() {
              return {
                username: '',
                password: '',
                btnSigninDisabled: true
              }
          },
          computed: {},
          methods: {
            alert(message, type) {
              this.$refs.liveAlertPlaceholder.innerHTML = [
                `<div class="alert alert-${type} alert-dismissible" role="alert">`,
                `   <div>${message}</div>`,
                '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                '</div>'
              ].join('')
            },
            change() {
              if (this.username && this.password) {
                this.btnSigninDisabled = false
              } else {
                this.btnSigninDisabled = true
              }
            },
            signin() {
              const that = this
              if (that.username && that.password) {
                axios.post('/signin', {
                  username: that.username,
                  password: CryptoJS.SHA256(that.password).toString()
                }).then((res) => {
                  if (res.data.Code === -10000) {
                    that.alert('Username or password invalid', 'danger')
                  } else {
                    that.alert('Signed in', 'success')
                    setTimeout(() => {
                      window.location.href = '/'
                    }, 2000)
                  }
                }).catch((err) => {
                  that.alert('Sign in failed', 'danger')
                }).finally(() => {
                  that.username = ''
                  that.password = ''
                  that.btnSigninDisabled = true
                })
              } else {
                that.btnSigninDisabled = true
              }
            }
          },
          delimiters: ["{[{", "}]}"],
      }).mount('#app')
    </script>
  </body>
</html>
